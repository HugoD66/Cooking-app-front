{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/card\";\nfunction ListRecipeComponent_div_1_mat_card_1_ul_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\")(1, \"li\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const recipeIng_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(recipeIng_r5);\n  }\n}\nfunction ListRecipeComponent_div_1_mat_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-header\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-card-content\")(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ListRecipeComponent_div_1_mat_card_1_ul_6_Template, 3, 1, \"ul\", 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const recipe_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", recipe_r3.name, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"ID: \", recipe_r3.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", recipe_r3.ingredients);\n  }\n}\nfunction ListRecipeComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ListRecipeComponent_div_1_mat_card_1_Template, 7, 3, \"mat-card\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", data_r1);\n  }\n}\nexport class ListRecipeComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  ngOnInit() {\n    this.data$ = this.getData();\n  }\n  getData() {\n    return this.http.get('http://localhost:3000/recipe');\n  }\n  static #_ = this.ɵfac = function ListRecipeComponent_Factory(t) {\n    return new (t || ListRecipeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListRecipeComponent,\n    selectors: [[\"app-list-recipe\"]],\n    decls: 3,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function ListRecipeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"hr\");\n        i0.ɵɵtemplate(1, ListRecipeComponent_div_1_Template, 2, 1, \"div\", 0);\n        i0.ɵɵpipe(2, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx.data$));\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.MatCard, i3.MatCardContent, i3.MatCardHeader, i2.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","recipeIng_r5","ɵɵtemplate","ListRecipeComponent_div_1_mat_card_1_ul_6_Template","ɵɵtextInterpolate1","recipe_r3","name","id","ɵɵproperty","ingredients","ListRecipeComponent_div_1_mat_card_1_Template","data_r1","ListRecipeComponent","constructor","http","ngOnInit","data$","getData","get","_","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","ListRecipeComponent_Template","rf","ctx","ɵɵelement","ListRecipeComponent_div_1_Template","ɵɵpipeBind1"],"sources":["D:\\Projets\\dev\\cuisine-angular-nest\\cook\\src\\app\\recipe\\list-recipe\\list-recipe.component.ts","D:\\Projets\\dev\\cuisine-angular-nest\\cook\\src\\app\\recipe\\list-recipe\\list-recipe.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {Ingredient} from \"../../ingredient/ingredient.model\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-list-recipe',\n  templateUrl: './list-recipe.component.html',\n  styleUrls: ['./list-recipe.component.scss']\n})\nexport class ListRecipeComponent {\n  data$: Observable<Ingredient[]> | undefined; // Utilisez la classe Ingredient\n  constructor(\n      private http: HttpClient,\n\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.data$ = this.getData();\n  }\n  getData(): Observable<Ingredient[]> {\n    return this.http.get<Ingredient[]>('http://localhost:3000/recipe');\n  }\n}\n","<hr>\n<div *ngIf=\"data$ | async as data\" >\n    <mat-card *ngFor=\"let recipe of data\">\n        <mat-card-header>\n            {{ recipe.name }}\n        </mat-card-header>\n        <mat-card-content>\n            <p>ID: {{ recipe.id }}</p>\n            <ul *ngFor=\"let recipeIng of recipe.ingredients\">\n                <li>{{recipeIng}}</li>\n            </ul>\n        </mat-card-content>\n    </mat-card>\n</div>\n"],"mappings":";;;;;;ICQYA,EAAA,CAAAC,cAAA,SAAiD;IACzCD,EAAA,CAAAE,MAAA,GAAa;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAAlBH,EAAA,CAAAI,SAAA,GAAa;IAAbJ,EAAA,CAAAK,iBAAA,CAAAC,YAAA,CAAa;;;;;IAP7BN,EAAA,CAAAC,cAAA,eAAsC;IAE9BD,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAkB;IAClBH,EAAA,CAAAC,cAAA,uBAAkB;IACXD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC1BH,EAAA,CAAAO,UAAA,IAAAC,kDAAA,gBAEK;IACTR,EAAA,CAAAG,YAAA,EAAmB;;;;IAPfH,EAAA,CAAAI,SAAA,GACJ;IADIJ,EAAA,CAAAS,kBAAA,MAAAC,SAAA,CAAAC,IAAA,MACJ;IAEOX,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAS,kBAAA,SAAAC,SAAA,CAAAE,EAAA,KAAmB;IACIZ,EAAA,CAAAI,SAAA,GAAqB;IAArBJ,EAAA,CAAAa,UAAA,YAAAH,SAAA,CAAAI,WAAA,CAAqB;;;;;IAP3Dd,EAAA,CAAAC,cAAA,UAAoC;IAChCD,EAAA,CAAAO,UAAA,IAAAQ,6CAAA,sBAUW;IACff,EAAA,CAAAG,YAAA,EAAM;;;;IAX2BH,EAAA,CAAAI,SAAA,GAAO;IAAPJ,EAAA,CAAAa,UAAA,YAAAG,OAAA,CAAO;;;ADQxC,OAAM,MAAOC,mBAAmB;EAE9BC,YACYC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAGhB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,OAAO,EAAE;EAC7B;EACAA,OAAOA,CAAA;IACL,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAe,8BAA8B,CAAC;EACpE;EAAC,QAAAC,CAAA,G;qBAbUP,mBAAmB,EAAAjB,EAAA,CAAAyB,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnBX,mBAAmB;IAAAY,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVhCnC,EAAA,CAAAqC,SAAA,SAAI;QACJrC,EAAA,CAAAO,UAAA,IAAA+B,kCAAA,iBAYM;;;;QAZAtC,EAAA,CAAAI,SAAA,GAAoB;QAApBJ,EAAA,CAAAa,UAAA,SAAAb,EAAA,CAAAuC,WAAA,OAAAH,GAAA,CAAAf,KAAA,EAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}