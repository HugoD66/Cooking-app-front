{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ListIngredientComponent = class ListIngredientComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  ngOnInit() {\n    this.data$ = this.getData();\n  }\n  getData() {\n    return this.http.get('http://localhost:3000/ingredient');\n  }\n};\nListIngredientComponent = __decorate([Component({\n  selector: 'app-list-ingredient',\n  templateUrl: './list-ingredient.component.html',\n  styleUrls: ['./list-ingredient.component.scss']\n})], ListIngredientComponent);","map":{"version":3,"names":["Component","ListIngredientComponent","constructor","http","ngOnInit","data$","getData","get","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Projets\\dev\\cuisine-angular-nest\\cook\\src\\app\\ingredient\\list-ingredient\\list-ingredient.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { Ingredient } from '../ingredient.model'; // Importez la classe Ingredient\n\n@Component({\n  selector: 'app-list-ingredient',\n  templateUrl: './list-ingredient.component.html',\n  styleUrls: ['./list-ingredient.component.scss']\n})\nexport class ListIngredientComponent implements OnInit{\n  data$: Observable<Ingredient[]> | undefined; // Utilisez la classe Ingredient\n  constructor(\n    private http: HttpClient,\n\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.data$ = this.getData();\n  }\n  getData(): Observable<Ingredient[]> {\n    return this.http.get<Ingredient[]>('http://localhost:3000/ingredient');\n  }\n\n}\n"],"mappings":";AAAA,SAAQA,SAAS,QAAe,eAAe;AAUxC,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAElCC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAGd;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,OAAO,EAAE;EAC7B;EACAA,OAAOA,CAAA;IACL,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAe,kCAAkC,CAAC;EACxE;CAED;AAfYN,uBAAuB,GAAAO,UAAA,EALnCR,SAAS,CAAC;EACTS,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,C,EACWV,uBAAuB,CAenC"},"metadata":{},"sourceType":"module","externalDependencies":[]}